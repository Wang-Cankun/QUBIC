=================
Usage
==================
This software provides a biclustering module for microarray data. For a set of genes and a set of conditions, 
the program outputs a block-like structure which shows uniform pattern within the block, the block would 
contain only subsets of all given genes under subsets of all given conditions. 

Certain parts of the code uses open-source data structure library codes, including:
- Mark A. Weiss's data structure codes <http://www.cs.fiu.edu/~weiss/>

==================
Installation
==================
Simply put "qubicx.x.tar.gz" in any directory, 

    $ tar zxvf qubicx.x.tar.gz

enter the folder "qubicx.x" and type 

    $ make 

then the compiled codes are within the same directory as the source.

==================
Inputs and outputs
==================
The major program in the provided package is `qubic`, it can parse two 
formats of files, discrete data and continuous data, and examples for each
are provided. See help and look at all available options.

    $ ./qubic -h

Take a look at `toy_example` (discrete data) first. And try to run clustering

    $ ./qubic -i data/toy_example -d

-d is important here since it tells the program that this is discrete data.

Then look at a larger file `Ecoli` (continuous data). Try to run

    $ ./qubic -i data/example -f .25

This restricts no two blocks overlap more than 0.25 of the size of each one. And the other parameters are default value.

For each input file, our program generates three output files, namely,'.blocks' file, '.chars'file and '.rules' file.

In '.blocks' file, you can see all the biclusters the program found, especially, we use a blank line to separate 
the positively and the negatively (if any) correlated genes in each bicluster.

As to '.chars' file, it provides the qualitative matrix of the microarray data to usrs with some details of how to 
discrete the data in '.rules' file. You can find further details about how to represent a microarray dataset with 
a qualitative matrix in our paper.

==================
Advanced usages
==================
- A new function that can expand identified biclusters in specific environment. Suppose you have two expression matrices
 A and B, where B is subset of A, you can extend the biclusters of B in the matrix A as following,
    
    $ ./qubic -i A
    
    $ ./qubic -i B
    
    $ ./qubic -i A.chars -b B.blocks -s

and the program will generate a 'B.blocks.expansion' file, containing the enlarged biclusters in 'B.blocks'.

	==========
- when we use the parameter -r (>1), we have two methods, quantile_from_sorted_data and quantile_from_sorted_data_value, 
see details in read_array.c. now the results have each own advantages on GO, KEGG and REGULON.-07.20.2009

	==========
- We can just consider the seeds containing to-be-searched gene name, e.g. B1234

    $ ./qubic -i data/example -g b3634

- We can just consider the seeds containing a list of genes, e.g. candidate_list

    $ ./qubic -i Ecoli -l candidate_list
	==========

- S: the flag using area as the value of bicluster to determine when stop

    $ ./qubic -i Ecoli -S

- N: the flag using KL value as the value of bicluster to determine when stop
    
    $ ./qubic -i example -N
	==========

- C: the flag using the lower bound of condition number (5 persents of the gene number)

    $ ./qubic -i Ecoli -C

- To enlarge current biclsuter by the pvalue constrain 

    $ ./qubic -i Ecoli -P
	=========

- To descretize data by the mixture of normal distribution model

    $ ./qubic -i example -n

- To descretize RPKM data by the mixture of normal distribution model

    $ ./qubic -i example -R

- F: the flag of only doing discretization

    $ ./qubic -i example -F

- To descretize data by the mixture of 3-normal distribution model

    $ ./qubic -i example -n -3

- To descretize RPKM data by the mixture of 3-normal distribution model

    $ ./qubic -i example -R -3 
	=========

- Calculate the similarity between two genes consider spearman correlation and KL-information

    $ ./qubic -i example -p

- The gene descretization base on kernel density estimation is stored in script/discretization-kernal-clustering. 

======================
Parameters of QUBIC 
======================
QUBIC has a number of parameters, namely,

- the range r of possible ranks

- the percentage q of the regulating conditions for each gene

- the required consistency level c for a bicluster (default value is 0.95).

- the desired number o of the output biclusters (default value is 100).

- and the control parameter f for overlaps among to-be-identified biclusters. 

For each of these parameters, we allow the user to adjust the default value to provide some flexibility.

The parameters r and q affect the granularity of the biclusters. A user is recommended to start with 
a small value of r (the default value is 1 so the corresponding data matrix consists of values +1, -1 and 0), 
evaluate the results, and then use larger values (should not be larger than half of the number of the columns)
 to look for fine structures within the identified biclusters. The choice of q's value depends on 
 the specific application goals; that is if the goal is to find genes that are responsive to local regulators, 
 we should use a relatively small q-value; otherwise we may want to consider larger q-values. 
 The default value of q is 0.06 in QUBIC (this value is selected based on the optimal biclustering results on simulated data).

We have a parameter f to control the level of overlaps between to-be-identified biclusters (not discussed in 
the above algorithm); its default value is set to 1 to ensure that no two reported biclusters overlap more than f.

QUBIC also provides the option (-d) that a user can skip the step of using ranks to represent the 
actual gene expression values to go directly to the biclustering step on the provided matrix. 

==================
Changelog
==================
Initial import of Version 2.0
New features compared to 1.0:

- a new objective function when clustering based on KL function

- pvalue calculation using gsl library to the makefile (hypergeometric distribution)

- a new discretization method based on mixture normal distribution (controled by -n)
	- a well-done version of 3-classification 
 

Initial import of Version 2.1
New features compared to 2.0:
Yu Shang <yushang@uga.edu>
1. Using 1 to 9 different gauss distribution to discreting data (controled by -n or -R)
2. Calculating bic of the different gauss distribution

Initial import of Version 2.1.1
New features compared to 2.1:
Yu Shang <yushang@uga.edu>
1. Remove the diagnose program for NA and Inf.
2. Minimum initialization mean is less than the minimum data
3. Maximum initialization mean is grater than the maximum data

Initial import of Version 2.1.2
New features compared to 2.1.1:
Yu Shang <yushang@uga.edu>
1. Output all the parameters of 1 to 9 different gauss distribution

Version 2.1.6
1. add the new output file "RPKM_testing_1.RNA-seq_9results.txt" for discretization (-R or -n), containing all the internal results for the (up-to-9) normal distributions decomposition
2. add the new output file "RPKM_testing_1.RNA-seq_CHI_NEW.txt" for discretization (-R or -n), containing the optimized decomposition method using BIC
3. add the new output file "RPKM_testing_1.MA_table_1_pos_neg.txt" for discretization (-R or -n), containing the qualitative matrix of lowly expressed, normally expressed and highly expressed patterns
4. add the new output file "RPKM_testing_1.MA_table_2_indicator.txt" for discretization (-R or -n), containing the qualitative matrix of expressed and non-expressed patterns. if one gene have more than one patterns, we will split it into multiple putitative genes.
5. add the new output file "RPKM_testing_1.RNA-seq_EMresults.txt" for discretization (-R or -n), containing the qualitative matrix of up-to-9 states
6. add -N, -S whose details could be found in README file 

Version 2.1.7
1. fix the bug in clustering part.
2. The clustering part for -R / -n is ignored in this version. The user should select the discretizated output and run "$ ./qubic -i file -d".

Version 2.2.0
1.  delete previous discretize_new_3() and discretize_rpkm_3() function in read_array.cpp.
2. delete previous discretization output, add four new output files:
"em.chars" consists of nonzero integers(1~9), each row is a qualitative representation for one gene. Integer denotes which component distribution the gene comes from under the current condition;
"split.chars" is the qualitative matrix based on em.chars (see detail in the paper).;
"chars" consists of -1,0 and 1, which denote lowly, normally and highly expressed genes, respectively.

==================
Contact
==================
Any questions, problems, bugs are welcome and should be dumped to

Qin Ma <qin.ma@sdstate.edu>

Creation: Oct. 12, 2015

